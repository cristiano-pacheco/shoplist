// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/cristiano-pacheco/shoplist/internal/identity/domain/model"
	mock "github.com/stretchr/testify/mock"
)

// MockAccountConfirmationRepository is an autogenerated mock type for the AccountConfirmationRepository type
type MockAccountConfirmationRepository struct {
	mock.Mock
}

type MockAccountConfirmationRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *MockAccountConfirmationRepository) EXPECT() *MockAccountConfirmationRepository_Expecter {
	return &MockAccountConfirmationRepository_Expecter{mock: &_m.Mock}
}

// Create provides a mock function with given fields: ctx, confirmation
func (_m *MockAccountConfirmationRepository) Create(ctx context.Context, confirmation model.AccountConfirmationModel) (model.AccountConfirmationModel, error) {
	ret := _m.Called(ctx, confirmation)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 model.AccountConfirmationModel
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, model.AccountConfirmationModel) (model.AccountConfirmationModel, error)); ok {
		return rf(ctx, confirmation)
	}
	if rf, ok := ret.Get(0).(func(context.Context, model.AccountConfirmationModel) model.AccountConfirmationModel); ok {
		r0 = rf(ctx, confirmation)
	} else {
		r0 = ret.Get(0).(model.AccountConfirmationModel)
	}

	if rf, ok := ret.Get(1).(func(context.Context, model.AccountConfirmationModel) error); ok {
		r1 = rf(ctx, confirmation)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockAccountConfirmationRepository_Create_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Create'
type MockAccountConfirmationRepository_Create_Call struct {
	*mock.Call
}

// Create is a helper method to define mock.On call
//   - ctx context.Context
//   - confirmation model.AccountConfirmationModel
func (_e *MockAccountConfirmationRepository_Expecter) Create(ctx interface{}, confirmation interface{}) *MockAccountConfirmationRepository_Create_Call {
	return &MockAccountConfirmationRepository_Create_Call{Call: _e.mock.On("Create", ctx, confirmation)}
}

func (_c *MockAccountConfirmationRepository_Create_Call) Run(run func(ctx context.Context, confirmation model.AccountConfirmationModel)) *MockAccountConfirmationRepository_Create_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(model.AccountConfirmationModel))
	})
	return _c
}

func (_c *MockAccountConfirmationRepository_Create_Call) Return(_a0 model.AccountConfirmationModel, _a1 error) *MockAccountConfirmationRepository_Create_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockAccountConfirmationRepository_Create_Call) RunAndReturn(run func(context.Context, model.AccountConfirmationModel) (model.AccountConfirmationModel, error)) *MockAccountConfirmationRepository_Create_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteById provides a mock function with given fields: ctx, id
func (_m *MockAccountConfirmationRepository) DeleteById(ctx context.Context, id uint) error {
	ret := _m.Called(ctx, id)

	if len(ret) == 0 {
		panic("no return value specified for DeleteById")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, uint) error); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockAccountConfirmationRepository_DeleteById_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteById'
type MockAccountConfirmationRepository_DeleteById_Call struct {
	*mock.Call
}

// DeleteById is a helper method to define mock.On call
//   - ctx context.Context
//   - id uint
func (_e *MockAccountConfirmationRepository_Expecter) DeleteById(ctx interface{}, id interface{}) *MockAccountConfirmationRepository_DeleteById_Call {
	return &MockAccountConfirmationRepository_DeleteById_Call{Call: _e.mock.On("DeleteById", ctx, id)}
}

func (_c *MockAccountConfirmationRepository_DeleteById_Call) Run(run func(ctx context.Context, id uint)) *MockAccountConfirmationRepository_DeleteById_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(uint))
	})
	return _c
}

func (_c *MockAccountConfirmationRepository_DeleteById_Call) Return(_a0 error) *MockAccountConfirmationRepository_DeleteById_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockAccountConfirmationRepository_DeleteById_Call) RunAndReturn(run func(context.Context, uint) error) *MockAccountConfirmationRepository_DeleteById_Call {
	_c.Call.Return(run)
	return _c
}

// FindByToken provides a mock function with given fields: ctx, token
func (_m *MockAccountConfirmationRepository) FindByToken(ctx context.Context, token string) (model.AccountConfirmationModel, error) {
	ret := _m.Called(ctx, token)

	if len(ret) == 0 {
		panic("no return value specified for FindByToken")
	}

	var r0 model.AccountConfirmationModel
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (model.AccountConfirmationModel, error)); ok {
		return rf(ctx, token)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) model.AccountConfirmationModel); ok {
		r0 = rf(ctx, token)
	} else {
		r0 = ret.Get(0).(model.AccountConfirmationModel)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, token)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockAccountConfirmationRepository_FindByToken_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FindByToken'
type MockAccountConfirmationRepository_FindByToken_Call struct {
	*mock.Call
}

// FindByToken is a helper method to define mock.On call
//   - ctx context.Context
//   - token string
func (_e *MockAccountConfirmationRepository_Expecter) FindByToken(ctx interface{}, token interface{}) *MockAccountConfirmationRepository_FindByToken_Call {
	return &MockAccountConfirmationRepository_FindByToken_Call{Call: _e.mock.On("FindByToken", ctx, token)}
}

func (_c *MockAccountConfirmationRepository_FindByToken_Call) Run(run func(ctx context.Context, token string)) *MockAccountConfirmationRepository_FindByToken_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *MockAccountConfirmationRepository_FindByToken_Call) Return(_a0 model.AccountConfirmationModel, _a1 error) *MockAccountConfirmationRepository_FindByToken_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockAccountConfirmationRepository_FindByToken_Call) RunAndReturn(run func(context.Context, string) (model.AccountConfirmationModel, error)) *MockAccountConfirmationRepository_FindByToken_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockAccountConfirmationRepository creates a new instance of MockAccountConfirmationRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockAccountConfirmationRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockAccountConfirmationRepository {
	mock := &MockAccountConfirmationRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
